// Blur image
void blur(int height, int width, RGBTRIPLE image[height][width])
{
    //create temp array equal to size and width of original
    RGBTRIPLE temp[height][width];
    //start at row 0 of original
    for (int i = 0; i < height; i++)
    {
        //column of original image
        for (int j=0; j < width; j++)
        {
            int redcounter =0 , greencounter=0, bluecounter=0, counter = 0;
            
            //create a temp matrix starting 1 row above, iterate 3 times. k is temp matrix row
            for (int r=-1; r <2; r++)
            {
                //and 1 column to the left, k is temp matrix column
                for (int c =-1; c < 2; c++)
                {
                    int y = r+i;
                    int x = c+j;
                    // if  out of bounds
                    if (y < 0 || y > height || x < 0 || x > width)
                    { //do nothing
                    }
                    else
                    {
                        //grab the values associated with the position
                        redcounter += image[x][y].rgbtRed;
                        greencounter +=  image[x][y].rgbtGreen;
                        bluecounter += image[x][y].rgbtBlue;
                        
                        //and count the number of times you have done so
                        counter++;
                        continue;
                    }
                }
            }
        int blurred =  (int) (round(redcounter / counter));
        int blurgreen =  (int) (round(greencounter/ counter));
        int blurblue = (int) (round(bluecounter / counter));
        
        if (blurred > max)
        {
            blurred = max;
        }
        if (blurgreen > max)
        {
            blurgreen = max;
        }
        if (blurblue > max)
        {
            blurblue = max;
        }
        
        temp[i][j].rgbtRed =  blurred;
        temp[i][j].rgbtGreen =  blurgreen;
        temp[i][j].rgbtBlue =  blurblue;
        }
    }

    for (int i=0; i< height; i++)
    {
        for (int j=0; j< width; j++)
        {
            image[i][j] = temp[i][j];
        }
    
    }

return;
}
